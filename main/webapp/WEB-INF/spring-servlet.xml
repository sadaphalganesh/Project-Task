<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd     
                    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<!-- tells DispatcherServlet to look for Controller classes using @Controller annotation. -->
	<mvc:annotation-driven />
	<!-- tells DispatcherServlet where to look for controller classes -->
	<context:component-scan base-package="com.jbk" />
	
	<context:property-placeholder location="WEB-INF/jdbc.properties" />
	

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView"></property>
		<property name="prefix">
			<value>/WEB-INF/views/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

	<!-- define the database connection pool -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- setup hibernate session factory -->
	 <bean id="sessionFactory"  class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>  
        <property name="packagesToScan" value="com.jbk.entity"></property>
        <property name="hibernateProperties">  
            <props>  
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>  
                <prop key="hibernate.hbm2ddl.auto">update</prop>  
                <prop key="hibernate.show_sql">true</prop>  
            </props>  
        </property>
    </bean>

	<!-- setup hibernate transaction manager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- enable configuration of transactional behaviour based on annotation -->
	<tx:annotation-driven transaction-manager="transactionManager" />
		
	<!-- related to email-->
	
	<context:property-placeholder location="/WEB-INF/email.properties" />
	
		<bean id="emailService" class="com.jbk.service.EmailService">
			<property name="props" >
				<props>
					<prop key="mail.smtp.host">smtp.gmail.com</prop>
					<prop key="mail.smtp.socketFactory.port">465</prop>
					<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory </prop>
					<prop key="mail.smtp.auth">true</prop>
					<prop key="mail.smtp.port">465</prop>
				
				</props>
			</property>
		</bean>
</beans>